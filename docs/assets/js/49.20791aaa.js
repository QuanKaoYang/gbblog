(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{339:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("最近のWindowsは賢いので、1、2、3…10、11という名前のファイルが並んでいても、きちんと数字のとおり並べてくれます。ところがソフトによっては最初の文字だけを基準にソートするものもあり、1、11、12...2、3、4...のように並べられることもあります。")]),t._v(" "),a("p",[t._v("これを回避するためには、01、02、03…のようにいわゆる「ゼロ埋め」をするのが常套手段なのですが、桁数が増えるとなかなか面倒です。")]),t._v(" "),a("p",[t._v("そんなとき、PowerShellに素敵なメソッドがあるのに気づきました。")]),t._v(" "),a("h2",{attrs:{id:"padleftで左埋め"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#padleftで左埋め"}},[t._v("#")]),t._v(" PadLeftで左埋め")]),t._v(" "),a("p",[t._v("PowerShellのString型にはPadLeftというメソッドがあります。これを使えば一瞬です。")]),t._v(" "),a("p",[t._v("使い方も簡単で、$str.PadLeft( "),a("em",[t._v("桁数")]),t._v(", "),a("em",[t._v("”埋めたい文字”")]),t._v(" ) とするだけです。ではやってみましょう。")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v("=0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-le")]),t._v(" 1000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \t"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PadLeft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 0000")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 0001")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1000")]),t._v("\n")])])]),a("p",[t._v("これをRename-Itemと組み合わせれば、通し番号のついたファイルが簡単に作れます。")]),t._v(" "),a("p",[t._v("引数を変えれば5桁でも6桁でもどんとこい。")]),t._v(" "),a("p",[a("s",[t._v("PowerShellは、あとは配列さえ使いやすいければなぁ……")])]),t._v(" "),a("link-to")],1)}),[],!1,null,null,null);s.default=e.exports}}]);