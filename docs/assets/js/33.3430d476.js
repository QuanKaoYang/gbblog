(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{303:function(t,e,a){"use strict";a.r(e);var s=a(5),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"get-childitem-チートシート"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-childitem-チートシート"}},[t._v("#")]),t._v(" Get-ChildItem チートシート")]),t._v(" "),a("p",[t._v("PowerShellの入門向けで、なおかつ翻訳者にとってお世話になる頻度が高いのがこの”Get-ChildItem”。\n指定したフォルダにあるファイル・フォルダを表示してくれるコマンドレットです。\nいくつかのオプションがあるので見ていきましょう。")]),t._v(" "),a("h2",{attrs:{id:"概要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概要"}},[t._v("#")]),t._v(" 概要")]),t._v(" "),a("ul",[a("li",[t._v("エイリアス\n"),a("ul",[a("li",[t._v("gci")]),t._v(" "),a("li",[t._v("ls")]),t._v(" "),a("li",[t._v("dir")])])]),t._v(" "),a("li",[t._v('オプション\n| オプション | 引数 | 説明 |\n|---|---|---|\n| * -Path | 1つまたは複数の文字列 | 表示させたいパスを指定します。省略した場合は現在の場所にある項目を表示します。カンマ "," で区切れば複数の場所を指定できます。|\n| * -Filter | 1つの文字列 | 指定した場所にあるファイルのうち、表示させたいものを絞り込みます。ワイルドカード文字として、任意の1文字 ”?" と1以上の文字 ”'),a("em",[t._v("” が使えます。Wordファイルのみが欲しい場合は、”")]),t._v(".doc?” のように指定します。（2007以降のものしかないと分かっている場合は ”*.docx”でも可） |\n| -Recurse | なし | フォルダ内の項目を再帰的に検索します。 ……と言ってもよく分からないと思います。 つまり、フォルダ内にフォルダがあった場合、そのフォルダの中身も表示対象とする、ということです。 フォルダが小分けにされている場合に力を発揮します。 |\n| -Name | なし | このオプションを指定すると、ファイル名・フォルダ名のみが表示されるようになります。 権限や更新日時などの情報が不要なときに。 |\n| -File | なし | このオプションを指定すると、ファイルのみが表示されるようになります（フォルダは表示されなくなります）。 |\n| -Directory | なし | このオプションを指定すると、フォルダのみが表示されるようになります（ファイルは表示されなくなります）。|\n| -Force | なし | このオプションを指定すると、隠しフォルダ・隠しファイルも表示されるようになります。|\n*はこの順で入力する場合に、オプションの指定がいらないものを示す")])]),t._v(" "),a("h2",{attrs:{id:"使用例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用例"}},[t._v("#")]),t._v(" 使用例")]),t._v(" "),a("p",[t._v("フォルダ”1”と”2”にあるWordファイルをすべて表示する（名前のみ）")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get-ChildItem")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("doc? "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Name\n")])])]),a("p",[t._v("サブフォルダも含めて、現在のフォルダにあるすべてのファイルを表示する")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get-ChildItem")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Recurse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("File "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Force\n")])])]),a("p",[t._v("変数に格納した場合の戻り値は、オブジェクトの配列（Object[]）です。\nファイルであればFileInfoオブジェクト、フォルダであればDirectoryInfoオブジェクトになっています。")])])}),[],!1,null,null,null);e.default=r.exports}}]);